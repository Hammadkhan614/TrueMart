@model OnlineShop.Models.SubCategory
@using OnlineShop.Models;

@{

    Category cat = new Category();
    var list = cat.GetCategories();
}
<form id="FormSubCategory" method="post" enctype="multipart/form-data">
    @Html.HiddenFor(a => a.SubCategoryId)
    <div class="mb-3">
        <label class="form-label">CategoryName @Html.ValidationMessageFor(A => A.CategoryName, null, new { @class = "text-Danger" })</label>
        @Html.DropDownListFor(A => A.CategoryId, new SelectList(list, "CategoryId", "CategoryName"), "Select", new { @class = "form-control" })
    </div>
    <div class="mb-3">
        <label class="form-label">Name @Html.ValidationMessageFor(A => A.SubCategoryName, null, new { @class = "text-Danger" })</label>
        @Html.TextBoxFor(A => A.SubCategoryName, new { @class = "form-control" })
    </div>
    <div class="mb-3">
        <label class="form-label">Image @Html.ValidationMessageFor(A => A.FileImage, null, new { @class = "text-Danger" })</label>
        @Html.TextBoxFor(A => A.FileImage, new { @class = "form-control", Type = "file" })
    </div>

    <div class="mb-3">
        <label class="form-label">Status @Html.ValidationMessageFor(A => A.Status, null, new { @class = "text-Danger" })</label>
        @Html.DropDownListFor(A => A.Status, new List<SelectListItem>()
 {new SelectListItem(){Text="Active",Value="1"},
     new SelectListItem(){Text="In-Active",Value="0" }
     }, "SelectCatogery", new { @class = "form-control" });

    </div>
    <button type="button" class="btn btn-outline-primary" data-bs-dismiss="modal">Cancel</button>
    <button type="submit" class="btn btn-primary">Add</button>

</form>
